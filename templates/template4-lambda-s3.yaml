AWSTemplateFormatVersion: 2010-09-09
Description: >
  Template to deploy a lambda which is triggered by an S3 event.

Parameters:
  DeploymentBucket:
    Type: String
    Description: Enter the name of the S3 bucket where your deployment package is.
  DeploymentPackageKey:
    Type: String
    Description: Enter the name of the S3 key of your deployment package.
  BucketName:
    Type: String
    Description: Enter the name of S3 bucket you wish to create.

Resources:
  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
              - lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      Path: "/"
      PermissionsBoundary: !Sub arn:aws:iam::${AWS::AccountId}:policy/ScopePermissions
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
      - PolicyName: LambdaLogsPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            # update perms as appropriate when .py changes
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - s3:GetObject
              - s3:PutObject
              - s3:ListBucket
            Resource: '*'
# refers to ParameterKey=<key> in --parameters
# https://hands-on.cloud/how-to-create-and-deploy-your-first-python-aws-lambda-function/#building-lambda-function-zip-archive
# https://docs.aws.amazon.com/lambda/latest/dg/python-package.html
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.8
      Handler: "lambda_function.handler" # points to module.function in lambda_function.py
      Role: !GetAtt LambdaFunctionRole.Arn
      Code:
        S3Bucket: !Ref DeploymentBucket
        S3Key: !Ref DeploymentPackageKey

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref BucketName
      # comment below on first run, uncomment after deploy success and update-stack
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt LambdaFunction.Arn

  S3BucketPermission:
    Type: AWS::Lambda::Permission
    Properties: 
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunction
      Principal: s3.amazonaws.com
      SourceArn: !GetAtt S3Bucket.Arn
